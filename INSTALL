.. _install:

======================
 Installing PyBlosxom
======================

Installing Pyblosxom is pretty easy for most situations.

If the instructions here don't meet your needs, ask us on the
pyblosxom-users mailing list or on IRC.  Information for both is on
the `website`_.

.. _website: http://pyblosxom.bluesock.org/


Upgrading
=========

.. only:: text

   If you're upgrading from a previous version, read through this and
   then read the upgrade instructions in UPGRADE.

.. only:: html

   If you're upgrading from a previous version, read through this and
   then read the upgrade instructions in :ref:`upgrading`.


.. _requirements:

Requirements
============

PyBlosxom requires at least Python 2.4 to install.  PyBlosxom does not
work with Python 3 or higher.

PyBlosxom is well supported on GNU/Linux, works well on Mac OS X, and
might work on Windows.  This is completely dependent on who is
currently using Pyblosxom and whether they help fix things.

PyBlosxom works with any web-server as a CGI application, works as a
WSGI application, and might work in other contexts.

.. Note::

   If you're using a server host that doesn't allow you to run
   CGI/WSGI applications, then you will want to use static rendering.
   This allows you to set up your blog on your local machine,
   "compile" it into static html files, and then push those files to
   your server host.

   .. only:: text

      For more information on static rendering, see
      docs/deploy_staticrendering.rst after installing Pyblosxom.

   .. only:: html

      For more information on static rendering, see
      :ref:`static-rendering`.


Installation: site-wide, in a virtual enviroment, or to hack on Pyblosxom
=========================================================================

First you need to install Pyblosxom.

1. You can install PyBlosxom site-wide.  If you do this then all users
   on your system will be able to use PyBlosxom.  In order to do this,
   you must have an administrative account on the machine you're
   installing it on.

   See :ref:`Installing site-wide` if this is what you want to do.

2. You can install PyBlosxom in a virtual environment.  This is done
   using virtualenv.

   See :ref:`Installing in a virtual environment` if this is what you
   want to do.

3. You can install PyBlosxom locally in a way that makes it easy to
   hack on and send patches upstream to us.

   See :ref:`Installing PyBlosxom to hack on it` if this is what you want to
   do.


.. _Installing site-wide:

Installing site-wide
--------------------

If you have an administrative account on your computer and you want to
install PyBlosxom site-wide so that all users can use it, then this is
the installation section for you!

This requires:

* Python 2.4 or higher
* the Python package management tool `setuptools`_ and either one of the
  Python package installers `pip`_ (newer, better) or easy_install
  (ships with setuptools)
* administrative access to the machine you're installing on


To install:

1. If you have `pip`_ then do::

      sudo pip install pyblosxom

   Or if you have `easy_install`_ then do::

      sudo easy_install pyblosxom


If you have neither `pip`_ nor `easy_install`_, then you should probably
install one or the other to make your life with Python easier.

That's it!  You can move on to :ref:`Creating a blog` now.

.. _easy_install: http://pypi.python.org/pypi/setuptools
.. _setuptools: http://pypi.python.org/pypi/setuptools
.. _pip: http://pypi.python.org/pypi/pip


.. _Installing in a virtual environment:

Installing in a virtual environment
-----------------------------------

If you want to install PyBlosxom in a way that doesn't affect your
system and in a way that only you can use it (perhaps you don't have
an administrative account on your system), then this is the
installation section for you!

This requires:

* Python 2.4 or higher
* a Python package installer: `pip`_ or `easy_install`_
* `virtualenv`_, the virtual Python environment builder

.. _pip: http://pypi.python.org/pypi/pip
.. _easy_install: http://pypi.python.org/pypi/setuptools
.. _virtualenv: http://pypi.python.org/pypi/virtualenv


To install:

1. Create a virtual environment for PyBlosxom in a directory of your
   choosing (as denoted by ``<VIRTUAL-ENV-DIR>``)::

      virtualenv <VIRTUAL-ENV-DIR>

   This command creates a new directory called ``<VIRTUAL-ENV-DIR>``
   (you can use any directory name you want) that contains its own
   Python package installation directories and a Python interpreter
   that uses those directories.  This is the virtual environment that
   PyBlosxom will be installed into and will run in.  If you decide to
   delete PyBlosxom at some point, you can just delete this directory
   and all its contents.

2. Activate the virtual environment in your current shell session::

      source <VIRTUAL-ENV-DIR>/bin/activate

   This command changes your current shell's ``$PATH`` environment
   variable to point to the ``<VIRTUAL-ENV-DIR>/bin`` directory, so
   that commands such as ``python``, ``pip`` and ``easy_install`` will
   use the virtual environment instead of your default Python
   environment.  It will also change your shell prompt to indicate
   that the virtual environment is active.

   If you exit your current shell session and start a new one, the
   virtual environment will no longer be active.  You have to activate
   the virtual environment for each new shell session before doing
   anything with PyBlosxom.

   Additionally, if you're running PyBlosxom from CGI or a cron job,
   you want to use the ``python`` interpreter located in the ``bin``
   directory of your virtual environment---not the system one.

3. Finally, install PyBlosxom into the activated virtual environment.

   If you have `pip`_ installed, then do::

      pip install pyblosxom

   If you don't have `pip`_ installed, but have `easy_install`_, then
   do::

      easy_install pyblosxom


That's it!  You can move on to :ref:`Creating a blog` now.


.. _Installing PyBlosxom to hack on it:

Installing PyBlosxom to hack on it
----------------------------------

Installing PyBlosxom to hack on it is a little different since you:

1. want to be running PyBlosxom from a git clone
2. want PyBlosxom installed such that you don't have to keep running
   ``python setup.py install``
3. want Paste installed so you can test locally

This requires:

* Python 2.4 or higher
* `git`_
* `virtualenv`_
* `PasteScript`_, the command-line frontend for the Python Paste web
  development utilities

.. _git: http://git-scm.com/
.. _virtualenv: http://pypi.python.org/pypi/virtualenv
.. _PasteScript: http://pypi.python.org/pypi/PasteScript


To install:

1. Create a virtual environment for PyBlosxom into a directory of your
   choosing as denoted by ``<VIRTUAL-ENV-DIR>``::

      virtualenv <VIRTUAL-ENV-DIR>

   This is the virtual environment that PyBlosxom will run in.  If you
   decide to delete PyBlosxom at some point, you can just remove this
   virtual environment directory.

2. Activate the virtual environment::

      source <VIRTUAL-ENV-DIR>/bin/activate

   Remember to activate the virtual environment **every** time you do
   something with PyBlosxom.

   Additionally, if you're running PyBlosxom from CGI or a cron job,
   you want to use the ``python`` interpreter located in the ``bin``
   directory of your virtual environment--not the system one.

3.  Using git, clone the PyBlosxom repository::

      git clone git://gitorious.org/pyblosxom/pyblosxom.git pyblosxom

4. Change directories into the ``pyblosxom`` directory and run::

      python setup.py develop


When you want to run PyBlosxom from your git clone in your virtual
environment, you will:

1. Make sure the virtual environment is activated and if it isn't do::

      source <VIRTUAL-ENV-DIR>/bin/activate

2. Change directories into where you have your blog and do::

      paster serve blog.ini


.. Note::

   Because you installed PyBlosxom with ``python setup.py develop``,
   when you make changes to the PyBlosxom code, they'll be available
   in the environment--you don't need to re-run ``python setup.py
   develop``.

That's it!  You can move on to :ref:`Creating a blog` now.


.. _Creating a blog:

Creating a blog
===============

To create a blog, do::

   pyblosxom-cmd create ./blog/

That generates the directory structure for a blog in ``./blog/``, some
required files, and a first post.

.. Note::

   If you're using a virtual environment, make sure you've activated
   the virtual environment and are using the ``pyblosxom-cmd`` in the
   ``bin`` directory of your virtual environment!


Deploying
=========

We use the word "deploy" to cover the steps and setup required to turn
your blog into a website.  This could be any of the following:

1. static rendering where your blog is compiled into a set of HTML pages
2. running your blog as a CGI program
3. running your blog as a WSGI application
4. some fourth thing!

The PyBlosxom documentation covers some of these deployment options.

.. only:: text

   See the docs/deploy_* files.

.. only:: html

   See the Deploy chapters.

If you want to deploy your blog in a way that's not covered in the
documentation, ask on the pyblosxom-users mailing list or on the
``#pyblosxom`` IRC channel on ``irc.freenode.net``.  You can find
details on the `website <http://pyblosxom.bluesock.org/>`_.


Post-install
============

After you finish installing and deploying PyBlosxom, you should look
at plugins and flavours to make your blog your own.

You should also sign up on the pyblosxom-users mailing list.

Additionally, please hop on the ``#pyblosxom`` IRC channel on
``irc.freenode.net`` and say hi.  It'll almost certainly help you get
acquainted with PyBlosxom and it'll reduce the amount of time it takes
to get your blog up and going.

Details are on the `website <http://pyblosxom.bluesock.org/>`_.

