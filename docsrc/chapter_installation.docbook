<!--
  CHAPTER INSTALLATION
-->
<chapter id="installation">
<title>Installing PyBlosxom</title>
<para>
While there are many ways to install PyBlosxom, the most common one is
to install PyBlosxom as a CGI script for a single user.  This installation
guide will cover that.  For other ways to install PyBlosxom, refer to
the mailing lists and the web-site.
</para>
<para>
This installation assumes you have some understanding of CGI, Apache 
configuration, and know how to manipulate files and directories.  If this 
doesn't sound like you, maybe you should get a friend to help out or ask 
for help on the pyblosxom-users mailing list.  Details of the mailing
list are on our <ulink
url="http://pyblosxom.sourceforge.net/blog/static/contact">web-site.</ulink>
</para>
<note>
  <title>Upgrading PyBlosxom</title>
  <para>
    If you are upgrading your version of PyBlosxom, follow the instructions 
    here and also read the <filename>README</filename> that comes with your 
    PyBlosxom tarball for differences between this version and the previous 
    versions.  The <filename>README</filename> file contains instructions
    on updating your config.py file, templates, and other parts of your
    PyBlosxom installation which you will have to do by hand.
  </para>
</note>

<sect1>
<title>Pre-requisites for installing PyBlosxom</title>
<para>
You will need:
</para>
<itemizedlist>
<listitem>
<para>
a web-server that runs CGI
</para>
</listitem>
<listitem>
<para>
Python version 2.2 or later
</para>
</listitem>
<listitem>
<para>
a text editor (notepad, vi, emacs, nano, ...) 
</para>
</listitem>
</itemizedlist>
</sect1>

<sect1 id="installsteps">
<title>Installing PyBlosxom</title>
<para>
Installing PyBlosxom should take 5-10 minutes depending on what state
your system is currently in.  The installation consists of seven steps.  
Tweaking, styling, and adding content to your blog is covered in later 
chapters of this manual.
</para>
<para>
Here are the steps you need to do to install PyBlosxom:
</para>

<orderedlist numeration="arabic">
<listitem>
<para>
Download PyBlosxom: 
Go to <ulink
url="http://pyblosxom.sourceforge.net/">http://pyblosxom.sourceforge.net/</ulink>
, click on the Download link, and download the latest PyBlosxom .tar.gz file.
</para>
</listitem>
<listitem>
<para>
Untar PyBlosxom: 
Create a working temporary directory, move the PyBlosxom tar ball into it, 
and then untar the tar ball (something like 
<command>tar -xzvf pyblosxom.version.tar.gz</command>).
</para>
</listitem>
<listitem>
<para>
Documentation: To create this guide go into the
<filename>./docsrc</filename> directory. Run <command>make
all</command> to generate documentation in multiple HTML, single HTML
and PDF formats. <command>make single</command> to create a single
document, <command>make multiple</command> for multiple HTML pages,
<command>make pdf</command> to create a PDF and the single
page. Documentation can be found in the newly
<filename>./docsrc/manual/</filename> created directory. <command>make
clean</command> to delete the documentation. <ulink
url="http://openjade.sourceforge.net/">OpenJade</ulink> is necessary
for the HTML files, <ulink
url="http://www.htmldoc.org/">HTMLDOC</ulink> for PDF generation.
</para>
</listitem>
<listitem>
<para>
Copy the scripts: 
Copy the <filename>pyblosxom.cgi</filename> and <filename>config.py</filename> 
files from the <filename>web/</filename> directory into your cgi-bin directory.
</para>
</listitem>
<listitem>
<para>
Create the necessary directories: 
Create a <filename>myblog</filename> directory and in that directory create
the following subdirectories: <filename>entries</filename> (the datadir), 
<filename>flavours</filename> (the flavourdir) and 
<filename>plugins</filename> (the plugin dir).
</para>
</listitem>
<listitem>
<para>
<anchor id="edit.anchor" />Edit the config.py file:
Open your <filename>config.py</filename> file up in your favorite editor.
Go through and change the values of the configuration settings according
to the instructions.
</para>
<para>
Make sure to set the datadir property to the datadir directory you created, 
the flavourdir property to the flavourdir directory you created, the 
plugins_dir property to the plugins directory you created, and the codebase 
property to the directory you untarred PyBlosxom into.
</para>
<para>
There are additional description and examples in the appendix of this 
manual.
</para>
<para>
Note: If you set the codebase property, it should be set to the directory 
that holds the <filename>Pyblosxom/</filename> directory.
</para>
</listitem>
<listitem>
<para>
Verify your installation:
Run <command>./pyblosxom.cgi</command> from the commandline.  That will
do a first-blush run to make sure things are configured correctly and
let you know if there are missing pieces in your 
<filename>config.py</filename> file.
</para>
</listitem>
<listitem>
<para>
Write your first post and test:
Open up the file <filename>firstpost.txt</filename> in the datadir
directory in your favorite editor and copy the following text into it:
</para>
<example><title>first post</title>
<programlisting role="text"><![CDATA[This is my first post
<p>
  This is my first post with PyBlosxom.
</p>
]]></programlisting>
</example>
<para>
Open up a web-browser and go to the URL
<filename>http://your_server_here/path/to/cgi-bin/pyblosxom.cgi</filename>
</para>
<para>
If everything is configured correctly, you should see your first post
rendered with the default HTML flavour.  If not, you'll either see
a Python stack trace or a message along the lines of Internal Server
Error.  In the latter case, check your web-server's error logs for more
details.
</para>
</listitem>
</orderedlist>
</sect1>

<!-- 
<sect1>
<title>Installing PyBlosxom in Debian</title>
<para>
At the time of this writing, <ulink url="http://www.debian.org">Debian
GNU/Linux</ulink> offers Pyblosxom in all three of its
distributions. Debian <emphasis>Sarge </emphasis> offers version 1.2.1. The Pyblosxom
development team doesn't recommend using this version. Debian
<emphasis>Etch</emphasis> and <emphasis>Sid</emphasis> offer version
1.3.2. 
</para>
<para>
To install from a Debian repository, use Synaptic, or from a root term
<command>apt-get install pyblosxom</command>. This will install all of
the necessary dependencies, the pyblosxom python libraries and create
an <filename>/etc/pyblosxom/</filename> directory.
</para>
<para>
Your <filename>config.py</filename> is in the
<filename>/etc/pyblosxom/</filename> directory and that is the file you
will edit as per <link linkend="edit.anchor">the previous
instructions</link>.
</para>
<para>
The pyblosxom CGI is installed in Debian's default
<filename>/usr/lib/cgi-bin/</filename> directory.
</para>
</sect1>
-->
 

<sect1>
<title>Trouble-shooting</title>
<para>
We're going to try to break this down a bit into categories.  Bear
with us and keep trying things.  If you have problems and have gone
through this section to no avail, then come talk to us on the <ulink
url="mailto:pyblosxom-users@lists.sourceforge.net">Pyblosxom users list.</ulink>
Details of the mailing list are located at our <ulink
url="http://pyblosxom.sourceforge.net/blog/static/contact">Contact
Us</ulink> page.
</para>

<sect2>
<title>Running ./pyblosxom.cgi doesn't work.</title>
<para>
First, you should check to see if you have Python installed on your
system.  If not, then that's probably the problem.  Go install Python.
</para>
<para>
If Python is installed on your system, make sure the first line in
<filename>pyblosxom.cgi</filename> points to your Python interpreter.  If not, 
fix that and try running <command>./pyblosxom.cgi</command> again.
</para>
<para>
If Python is installed on your system and the first line of 
<filename>pyblosxom.cgi</filename> is correct, then check to see if it's a 
permissions issue.  <filename>pyblosxom.cgi</filename> is a script--so it 
needs execute permission in order to function.  If those aren't set, then fix 
that and try running <command>./pyblosxom.cgi</command> again.
</para>
</sect2>

<sect2>
<title>I see a HTTP 404 error when I try to bring up my blog</title>
<para>
When you try to look at your blog and you get a HTTP 404 error, then
you're using the wrong URL.  Are you futzing with <filename>.htaccess</filename>?  
Does your server allow you to run CGI scripts?  Do other CGI scripts work?
Does the URL you're trying to use to access PyBlosxom look like other
URLs that work on your system?
</para>
</sect2>

<sect2>
<title>I see a HTTP 500 error when I try to bring up my blog</title>
<para>
When you try to look at your blog and you get a HTTP 500 error, check your
server logs.  For Apache, look for the <filename>error.log</filename> file in a 
place like <filename>/var/logs/apache</filename> or <filename>/var/logs/httpd</filename>.
</para>

<note>
  <title>make sure you read the installation chapter</title>
  <para>
    At this point, running <command>./pyblosxom.cgi</command> at the command 
    prompt should work fine.  If you haven't done that and you're busy 
    trouble-shooting, go back to the <link
    linkend="installsteps">installation guide</link> and make sure you did 
    all the steps.
  </para>
</note>

<para>
Does the account your web-server runs as have execute access to your 
<filename>pyblosxom.cgi</filename> script?
</para>
<para>
Is it kicking up a Python stack trace?  If so, uncomment the line in
<filename>pyblosxom.cgi</filename> (remove the # at the beginning of the line) that 
looks like this:
</para>
<programlisting role="python">#import cgitb; cgitb.enable()
</programlisting>
<para>
Then try looking at your blog again.  That should spit up a huge
pretty traceback that should help iron out the issue for you.  At a
bare minimum, it's useful to people who can help you out.
</para>
<para>
Do you have plugins loaded?  If you do, try unloading all your plugins
and see if the problem persists.  Sometimes there are issues with plugins
that only show up in certain situations.
</para>
</sect2>

<sect2>
<title>I have other issues</title>
<para>
Try changing the renderer for your blog to the debug renderer.  You can
do this by setting the <varname>renderer</varname> property in your 
<filename>config.py</filename> file to <literal>debug</literal>.  That will 
show a lot more detail about what things get set to and may help you figure 
out your issues.
</para>
</sect2>

<sect2>
<title>UGH!  My blog looks UGLY!</title>
<para>
Read the chapter on <link linkend="chap_flavours">Flavours and
Templates</link> to help you out.
</para>
</sect2>


<sect2>
<title>I hate writing in HTML!</title>
<para>
That's ok.  Read the chapter on <link linkend="entryparsers">entry
parsers.</link>
</para>
</sect2>
</sect1>
</chapter>
