<!--
  CHAPTER SYNDICATION
-->

<chapter id="syndication">
<title>Syndication</title>
<para>
Most newsreaders read most of the syndication formats.  So you shouldn't
feel that you have to implement each one of them in your blog--you can most
assuredly get away with implementing RSS 2.0 or ATOM and be just fine.
</para>

<sect1>
<title>RSS</title>
<para>
There are a variety of different versions of RSS and they're not all backwards
compatible with each other.
</para>

<sect2>
<title>RSS 0.9.1</title>
<para>
PyBlosxom comes with an rss flavour that produces RSS 0.9.1 output.  Here's a
sample of what it produces:
</para>
<programlisting role="rss"><![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<!-- name="generator" content="pyblosxom/1.2 3/25/2005" -->
<!DOCTYPE rss PUBLIC "-//Netscape Communications//DTD RSS 0.91//EN"
"http://my.netscape.com/publish/formats/rss-0.91.dtd">

<rss version="0.91">
<channel>
<title>My Blog</title>
<link>http://www.joe.com/blog/index.rss</link>
<description>This is my blog about trivial things</description>
<language>en</language>
<item>
    <title>Example of an entry post</title>

    <link>http://www.joe.com/blog/entries/example1.html</link>
    <description>&lt;p&gt;
  Here's an example of an entry in my blog.  This is the body of the entry.
&lt;/p&gt;
</description>
  </item>
</channel>
</rss>
]]></programlisting>
<para>
This example only has one entry in it.  The number of entries the rss flavour
will display is determined by the <varname>num_entries</varname> property in 
your <filename>config.py</filename> file.
</para>

<note>
  <title>probably better not to use RSS 0.9.1</title>
  <para>
  RSS 0.9.1 format lacks dates in the data for the items.  Unless you 
  include the date for the entry somewhere in the description block, people 
  looking at your RSS 0.9.1 feed won't know what the date the entry was 
  created on was.
  </para>
  <para>
  Unless you have some reason to use RSS 0.9.1 as your syndication format,
  you should look at using RSS 2.0 or Atom 1.0 both of which also come
  with PyBlosxom.
  </para>
</note>
</sect2>

<sect2>
<title>RSS 2.0</title>
<para>
PyBlosxom 1.3 comes with an RSS 2.0 flavour called "rss20".  If it's missing
features that you want (for example, some folks are doing podcasting with
their blog), then override the individual templates you need to adjust.
</para>
</sect2>

<sect2>
<title>Atom 1.0</title>
<para>
PyBlosxom 1.3 comes with an Atom 1.0 flavour called "atom".  If it's
missing features that you want, then override the individual templates
you need to adjust.
</para>
</sect2>
</sect1>

<sect1>
<title>Debugging your feeds</title>
<para>
There's a feed validator which is a hugely useful tool for figuring out
whether your feed is valid and fixing bugs in your feed.
</para>
<para>
http://feedvalidator.org/
</para>
</sect1>

</chapter>
